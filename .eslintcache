[{"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/index.js":"1","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/App.js":"2","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/reportWebVitals.js":"3","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Cues.js":"4","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/TS.js":"5","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/BreadcrumbExampleSize.js":"6","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/HabitLoopFramework.js":"7","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/TableExample.js":"8","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/FormExample.js":"9","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Login.js":"10","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Navbar.js":"11","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Lab.js":"12","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/ThinkSpace.js":"13","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/NewFeature.js":"14","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Tasks.js":"15","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Task.js":"16","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/CreateForm.js":"17","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/HabitsContainer.js":"18","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Habit.js":"19","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Edit.js":"20","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/TestRemind.js":"21","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/StickifydHabits.js":"22","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/StickifydHabit.js":"23","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Stickifyd.js":"24","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/EmptyCard.js":"25"},{"size":542,"mtime":1609042532303,"results":"26","hashOfConfig":"27"},{"size":1304,"mtime":1609452787105,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608593032507,"results":"29","hashOfConfig":"27"},{"size":1188,"mtime":1609183785703,"results":"30","hashOfConfig":"27"},{"size":612,"mtime":1609028204602,"results":"31","hashOfConfig":"32"},{"size":838,"mtime":1609035384177,"results":"33","hashOfConfig":"32"},{"size":917,"mtime":1609047666440,"results":"34","hashOfConfig":"27"},{"size":1340,"mtime":1609210522648,"results":"35","hashOfConfig":"27"},{"size":891,"mtime":1609041477113,"results":"36","hashOfConfig":"32"},{"size":6012,"mtime":1609050067927,"results":"37","hashOfConfig":"27"},{"size":1409,"mtime":1609208232496,"results":"38","hashOfConfig":"27"},{"size":2809,"mtime":1609188370702,"results":"39","hashOfConfig":"27"},{"size":1298,"mtime":1609219053724,"results":"40","hashOfConfig":"27"},{"size":8964,"mtime":1609825941065,"results":"41","hashOfConfig":"27"},{"size":458,"mtime":1609220691468,"results":"42","hashOfConfig":"27"},{"size":241,"mtime":1609220685705,"results":"43","hashOfConfig":"27"},{"size":1323,"mtime":1609864302718,"results":"44","hashOfConfig":"27"},{"size":3331,"mtime":1609865094260,"results":"45","hashOfConfig":"27"},{"size":1809,"mtime":1609654326023,"results":"46","hashOfConfig":"27"},{"size":1112,"mtime":1609639199618,"results":"47","hashOfConfig":"27"},{"size":1362,"mtime":1609640097402,"results":"48","hashOfConfig":"27"},{"size":542,"mtime":1609641485632,"results":"49","hashOfConfig":"27"},{"size":2164,"mtime":1609641423496,"results":"50","hashOfConfig":"27"},{"size":542,"mtime":1609646155468,"results":"51","hashOfConfig":"27"},{"size":508,"mtime":1609865140200,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"8jsgm5",{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"52eg43",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/index.js",[],["113","114"],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/App.js",["115","116","117"],"import React from 'react'\n;import './App.css';\nimport Navbar from './Navbar';\nimport Lab from './Lab';\nimport ThinkSpace from './ThinkSpace';\nimport NewFeature from './NewFeature';\n// import Login from './Login';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Sticky } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst STUDENTS = [\n  {\n    id: 1,\n    username: 'jpormentilla',\n    password: 'pass123',\n    email: 'julian.pormentilla@gmail.com'\n  }\n]\n\nclass App extends React.Component {\n  state = {  \n    users: []\n  }\n\n  render() { \n\n  return (\n    <Router>\n      <React.Fragment>\n        <Switch>\n          <div className=\"App\">\n            <Sticky context={this.contextRef}>\n              <Navbar loggedIn={this.state.loggedIn} setLogin={this.setLogin}/>\n            </Sticky>\n            {/* <Route path='/login' render={(props) => (<Login {...props} />)}></Route> */}\n            <Route path='/lab' render={(props) => (<Lab {...props} />)}></Route>\n            <Route path='/thinkspace' render={(props) => (<ThinkSpace {...props} />)}></Route>\n            <Route path='/newfeature' render={(props) => (<NewFeature {...props} />)}></Route>\n          </div>\n        </Switch>\n      </React.Fragment>\n    </Router>\n  );\n}\n}\nexport default App;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/reportWebVitals.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Cues.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/TS.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/BreadcrumbExampleSize.js",[],["118","119"],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/HabitLoopFramework.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/TableExample.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/FormExample.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Login.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Navbar.js",["120","121","122","123","124"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends React.Component {\n    render() { \n        return (  \n            <div className=\"Navbar\">\n                <div className=\"ui inverted borderless large menu\">\n                    <a className=\"item\">\n                        <Link to=\"/\" className=\"link\"><i class=\"big home icon\"></i></Link>\n                    </a>\n                    \n                    <a class='item'>\n                        <Link to='/lab' className='lab'>Lab</Link>\n                    </a>\n                    \n                    <a class='item'>\n                        <Link to='/thinkspace' className='thinkspace'>Think Space</Link>\n                    </a>\n\n                    <a class='item'>\n                        <Link to='/newfeature' className='thinkspace'>New Feature</Link>\n                    </a>\n\n                    <div className=\"right menu\">\n                        <a className=\"item\">\n                        {\n                            this.props.loggedIn\n                            ? <Link to=\"/login\" onClick={this.props.setLogin} className=\"link\">Logout</Link>\n                            : <Link to=\"/login\" className=\"link\">Login | Sign Up</Link>\n                        }\n                    </a>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Navbar;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Lab.js",["125","126","127"],"import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport Cues from './Cues';\nimport TableExample from './TableExample';\nimport Login from './Login';\n\nconst HABITS = [\n    {\n        id: 1, \n        cueType: 'situational',\n        cueDesc: 'I find myself in an unproductive state.',\n        cravingDesc: \"I want to feel like I'm still making progress towards my goal.\",\n        response: \"[ (0) I pull out my Index Card, which lists my tasks under two categories: LEFT-Brain & RIGHT-Brain Tasks, then (1) ] I complete a LEFT-Brain Task that I can easily handle at that moment.\",\n        reward: \"I satisfy my craving to feel like I'm still making progress towards my goal.\" \n    }\n]\n\nconst CLASSES = [\n    {\n        id: 1,\n        subject: 'Consistency'\n    },\n    {\n        id: 2,\n        subject: 'Effectiveness'\n    }\n]\n\nclass Lab extends React.Component {\n    state = {  \n        classes: [],\n        gameStarted: false,\n        habits: [],\n        renderCues: false\n    }\n\n    renderCues() {\n        this.setState({renderCues: true})\n        this.setState({gameStarted: true})\n    }\n\n    handleClickLoadData = e => {\n        console.log('EVENT: USER CLICKED [ Load Data ] BUTTON.')\n        this.setState({habits: HABITS})\n    }\n\n    handleClick = e => {\n        console.log('EVENT: USER CLICKED [ Start Game ] BUTTON.')\n        this.renderCues()\n    }\n\n    render() { \n        console.log('this.state.habits: ', this.state.habits)\n        return (  \n            <div style={{color: 'grey'}}>\n                <br/>\n                <h3>Lab</h3>\n                \n                <br/>\n                <hr/>\n                <br/>\n\n                <Button inverted onClick={this.handleClickLoadData}>Load Data</Button>\n\n                <br/>\n                <br/>\n                <br/>\n\n                { this.state.gameStarted ? <h3 style={{color: 'white'}}>Good luck, Player1!</h3> : <span><br/><Button inverted color='violet' onClick={this.handleClick}>Start Game</Button></span> }\n                { this.state.renderCues ? <Cues /> : null }\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n            </div>\n        );\n    }\n}\n \nexport default Lab;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/ThinkSpace.js",["128"],"import React from 'react';\nimport TableExample from './TableExample';\nimport Tasks from './Tasks';\nimport HabitLoopFramework from './HabitLoopFramework';\nimport { Button, Input } from 'semantic-ui-react';\n\nclass ThinkSpace extends React.Component {\n    state = {  }\n\n    render() { \n        return (  \n            <div style={{color: 'grey'}}>\n                <br/>\n                <h3>Think Space</h3>\n        \n                <br/>\n                <hr/>\n                <br/>\n\n                <h3>What new daily habit would you like to have?</h3>\n                <Input placeholder='e.g. practice coding for 1 hour, do 20 pushups, etc.' style={{width: '350px'}}/>\n                <br/>\n\n                <Tasks />\n\n                <HabitLoopFramework />\n\n                <TableExample />\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n            </div>\n        );\n    }\n}\n \nexport default ThinkSpace;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/NewFeature.js",["129","130"],"import React from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport StickifydHabits from './StickifydHabits';\nimport Tasks from './Tasks';\nimport CreateForm from './CreateForm';\nimport HabitsContainer from './HabitsContainer';\nimport Edit from './Edit';\nimport Stickifyd from './Stickifyd';\nimport TestRemind from './TestRemind';\nimport Datetime from 'react-datetime';\n\nconst HABITS = [\n    {\n        id: 1, \n        desc: 'Morning Routine',\n        hide: false,\n        startDate: Date(), \n        winningStreak: 0,\n    },\n    {\n        id: 2,\n        desc: 'Mid-Day Routine',\n        hide: false,\n        startDate: Date(), \n        winningStreak: 1\n    },\n    {\n        id: 3,\n        desc: 'Evening Routine',\n        hide: false,\n        startDate: Date(), \n        winningStreak: 21\n    }\n]\n\nconst PERSONS = [\n    { \n        id: 1,\n        industry: \"Personal Development\",\n        name: \"Julian\",\n        health: 50,\n        winningStreak: 10\n    },\n    {\n        id: 2,\n        industry: \"Personal Development\",\n        name: \"Cedric\",\n        health: 100,\n        winningStreak: 100\n    }\n]\n\nconst TASKS = [\n    {\n        id: 1,\n        type: 'A',\n        desc: 'EVENING ROUTINE',\n        completed: false\n    },\n    {\n        id: 2, \n        type: 'B',\n        desc: 'WASH DISHES',\n        completed: false\n    },\n    {\n        id: 3,\n        type: 'A',\n        desc: 'MORNING ROUTINE',\n        completed: false\n    },\n    {\n        id: 4, \n        type: 'A',\n        desc: \"IS EVERYTHING BACK IN IT'S PROPER PLACE?\",\n        completed: false \n    }\n]\n\nclass NewFeature extends React.Component {\n    state = {  \n        habits: [],\n        habitEdit: {},\n        habitStickifyd: {},\n        habitTestRemind: {},\n        person: {},\n        persons: [],\n        renderEdit: false,\n        renderGrid: false,\n        renderPersons: false,\n        renderIndexCard: false,\n        renderStickifyd: false,\n        renderTestRemind: false,\n        tasks: []\n    }\n\n    create = obj => {\n        obj.id = this.state.habits.length + 1\n        let arr = [...this.state.habits, obj]\n        this.setState({ habits: arr })\n    }\n\n    delete = id => {\n        let arr = this.state.habits.filter(habit => habit.id !== id)\n        this.setState({ habits: arr })\n    }\n\n    edit = (id, desc) => {\n        let arr = [...this.state.habits]\n        let obj = arr.find(elem => elem.id === id)\n        this.setState({ renderEdit: true })\n        this.setState({ habitEdit: obj })\n    }\n\n    editSubmit = (id, desc) => {\n        let arr = [...this.state.habits]\n        let elem = arr.find(habit => habit.id === id)\n        elem.desc = desc\n        this.setState({ habits: arr })\n        this.setState({ renderEdit: !this.state.renderEdit })\n    } \n\n    exercise = (id, health) => {\n    // When a user exercises, their health level increases by 10.\n        // console.log('EVENT2: USER CLICKED [ Exercise ] BUTTON.')    \n        let arr = [...this.state.persons]\n        let obj = arr.find(person => person.id === id)\n        obj.health = obj.health + 10\n        this.setState({ persons: arr })\n    } \n\n    handleClickLoadHabits = e => {\n        // console.log('EVENT: USER CLICKED [ Load Habits ] BUTTON.')\n        this.setState({ habits: HABITS })\n    }\n\n    handleClickLoadPersons = e => {\n        // console.log('EVENT: USER CLICKED [ Load Tasks ] BUTTON.')\n        this.setState({ persons: PERSONS })\n        this.setState({ renderPersons: true })\n    }\n\n    handleClickLoadTasks = e => {\n        // console.log('EVENT: USER CLICKED [ Load Tasks ] BUTTON.')\n        this.setState({ tasks: TASKS })\n    }\n\n    handleClickIndexCard = e => {\n        // console.log('EVENT: USER CLICKED [ Index Card ] BUTTON.')\n        this.setState({ renderIndexCard: true })\n        this.setState({ renderGrid: true })\n    }\n\n    // handleStickifyd = obj => {\n    //     this.setState({ renderStickifyd: true })\n    //     let arr = [...this.state.habits]\n    //     let elem = arr.find(habit => habit.id === obj.id)\n    //     elem.hide = false\n    //     this.setState({ habits: arr })\n    // }\n\n    testRemind = (id, desc) => {\n        let arr = [...this.state.habits]\n        let obj = arr.find(elem => elem.id === id)\n        this.setState({ renderTestRemind: true })\n        this.setState({ habitTestRemind: obj })\n    }\n\n    testRemindSubmit = (id, desc) => {\n        let arr = [...this.state.habits]\n        let elem = arr.find(habit => habit.id === id)\n        elem.winningStreak = elem.winningStreak + 1\n        if (elem.winningStreak === 21) {\n            // this.handleStickifyd(elem)\n            // elem.hide = true\n            this.setState({ habits: arr })\n        }\n        this.setState({ habits: arr })\n        this.setState({ renderTestRemind: !this.state.renderTestRemind })\n    }\n\n    render() { \n        console.log(\"test\")\n        return (            \n            <div style={{color: 'grey'}}>\n                <br/>\n                <h3>New Feature</h3>\n                \n                <Button onClick={this.handleClickLoadHabits} primary>Load Habits</Button>\n\n                <br/>\n                <br/>\n                {/* {this.state.renderStickifyd ? <Stickifyd habitStickifyd={this.state.habitStickifyd} /> : null }                 */}\n                {/* <Stickifyd habitStickifyd={this.state.habitStickifyd} /> */}\n\n                <br/>\n                <br/>\n                <hr/>\n                <br/>\n\n                <br/>\n                {/* <Datetime /> */}\n                <br/>\n\n                <CreateForm create={this.create}/>\n\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                {this.state.renderEdit ? <Edit editSubmit={this.editSubmit} habitEdit={this.state.habitEdit} /> : null }\n                <br/>\n\n                <br/>\n                {this.state.renderTestRemind ? <TestRemind testRemindSubmit={this.testRemindSubmit} habitTestRemind={this.state.habitTestRemind} /> : null }\n                <br/>\n\n                <HabitsContainer delete={this.delete} edit={this.edit} habits={this.state.habits} testRemind={this.testRemind}/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <Button onClick={this.handleClickLoadPersons} primary>Load Persons</Button>\n\n                <br/>\n                <br/>\n\n\n\n                <br/>\n                <br/>\n\n                { this.state.renderPersons ? <StickifydHabits exercise={this.exercise} persons={this.state.persons}/> : null }\n\n\n                {/* <Button color='yellow' onClick={this.handleClickIndexCard}>Index Card</Button> */}\n\n                <br/>\n                <br/>\n                <br/>\n\n                { this.state.renderIndexCard ? <img src=\"/images/IndexCardSystem.png\" alt=\"\"/> : null }\n\n                <br/>\n                <br/>\n\n                { this.state.renderGrid ? <Tasks handleClickLoadTasks={this.handleClickLoadTasks} tasks={this.state.tasks}/> : null }\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n            </div>\n        );\n    }\n}\n \nexport default NewFeature;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Tasks.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Task.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/CreateForm.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/HabitsContainer.js",["131"],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Habit.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Edit.js",["132"],"import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport Habit from './Habit';\n\nclass Edit extends React.Component {\n    state = {\n        id: 0,\n        desc: \"\"\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit = (id, desc) => {\n        console.log('EVENT: USER CLICKED [ Submit Changes ] BUTTON.')    \n        this.props.editSubmit(this.props.habitEdit.id, this.state.desc)   \n    }\n\n    render() {\n        console.log(this.props.habitEdit)\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Input\n                            placeholder={this.props.habitEdit.desc}\n                            name='desc'\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                        />     \n                    </Form.Group>\n                    <Form.Button content='Submit Changes' />\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Edit;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/TestRemind.js",["133"],"import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport Habit from './Habit';\n\nclass TestRemind extends React.Component {\n    state = {\n        id: 0,\n        desc: \"\"\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit = (id, desc) => {\n        console.log('EVENT: USER CLICKED [ Submit ] BUTTON.')    \n        if ( this.state.desc === this.props.habitTestRemind.desc) {\n            this.props.testRemindSubmit(this.props.habitTestRemind.id, this.state.desc)\n        } else {\n            alert('Error: Please Try Again')\n        }\n        this.setState({ desc: \"\" })\n   \n    }\n\n    render() {\n        return (\n            <div>\n                <Form inverted onSubmit={this.handleSubmit} style={{color: 'white'}}>\n                    <Form.Group>\n                        <Form.Input\n                            label='Please Re-Type Your Habit:'\n                            placeholder={this.props.habitTestRemind.desc}\n                            name='desc'\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                        />     \n                    </Form.Group>\n                    <Form.Button content='Submit' />\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default TestRemind;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/StickifydHabits.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/StickifydHabit.js",["134"],"import React from 'react';\nimport './App.css';\nimport { Button, Card, Form, Grid, Icon, Segment } from 'semantic-ui-react';\n\nclass StickifydHabit extends React.Component {\n    state = {  }\n\n    handleClickExercise = (id, health) => {\n        console.log('EVENT1: USER CLICKED [ Exercise ] BUTTON.')\n        this.props.exercise(id, health)\n    }\n\n    render() { \n        return (  \n            <div className=\"center-content\">\n                <br/>\n                <Grid.Column>\n                    <Segment>\n                        <Card>\n                            <Card.Content>\n                                <Card.Header>{this.props.person.name}</Card.Header>\n                                <Card.Meta>\n                                    <span className=\"health\">{this.props.person.health}</span>\n                                </Card.Meta>\n                                <Card.Description>\n                                    {this.props.person.industry}\n                                </Card.Description>\n                            </Card.Content>\n                            <Card.Content>\n                                <Button onClick={() => this.handleClickExercise(this.props.person.id, this.props.person.health)} primary>Exercise</Button>\n                            </Card.Content>\n                            <Card.Content>\n                                <Form>\n                                    <Form.Checkbox label=\"Morning Routine\"/>\n\n                                    <Form.Checkbox label=\"Evening Routine\"/>\n                                </Form>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <a>\n                                    <Icon name='user' />\n                                    <span className=\"winning-streak\">{this.props.person.winningStreak}</span> Day Winning Streak!\n                                </a>\n                            </Card.Content>\n                        </Card>\n                    </Segment>\n                </Grid.Column>\n                <br/>\n            </div>\n        );\n    }\n}\n \nexport default StickifydHabit;","/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/Stickifyd.js",[],"/Users/JulianREIMAGINED/Desktop/Coding/ah-app/src/EmptyCard.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":8,"column":50,"nodeType":"141","messageId":"142","endLine":8,"endColumn":58},{"ruleId":"139","severity":1,"message":"143","line":10,"column":8,"nodeType":"141","messageId":"142","endLine":10,"endColumn":14},{"ruleId":"139","severity":1,"message":"144","line":12,"column":7,"nodeType":"141","messageId":"142","endLine":12,"endColumn":15},{"ruleId":"135","replacedBy":"145"},{"ruleId":"137","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":9,"column":21,"nodeType":"149","endLine":9,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":13,"column":21,"nodeType":"149","endLine":13,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":17,"column":21,"nodeType":"149","endLine":17,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":21,"column":21,"nodeType":"149","endLine":21,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":26,"column":25,"nodeType":"149","endLine":26,"endColumn":45},{"ruleId":"139","severity":1,"message":"150","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":20},{"ruleId":"139","severity":1,"message":"151","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"139","severity":1,"message":"152","line":18,"column":7,"nodeType":"141","messageId":"142","endLine":18,"endColumn":14},{"ruleId":"139","severity":1,"message":"153","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"154","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":17},{"ruleId":"139","severity":1,"message":"155","line":11,"column":8,"nodeType":"141","messageId":"142","endLine":11,"endColumn":16},{"ruleId":"139","severity":1,"message":"156","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":19},{"ruleId":"139","severity":1,"message":"157","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":13},{"ruleId":"139","severity":1,"message":"157","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":40,"column":33,"nodeType":"149","endLine":40,"endColumn":36},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'STUDENTS' is assigned a value but never used.",["158"],["159"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableExample' is defined but never used.","'Login' is defined but never used.","'CLASSES' is assigned a value but never used.","'Button' is defined but never used.","'Stickifyd' is defined but never used.","'Datetime' is defined but never used.","'Container' is defined but never used.","'Habit' is defined but never used.","no-global-assign","no-unsafe-negation"]